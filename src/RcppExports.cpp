// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// jaccard_index_rcpp_parallel
NumericMatrix jaccard_index_rcpp_parallel(NumericMatrix mat1, NumericMatrix mat2);
RcppExport SEXP _MSCA_jaccard_index_rcpp_parallel(SEXP mat1SEXP, SEXP mat2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type mat1(mat1SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mat2(mat2SEXP);
    rcpp_result_gen = Rcpp::wrap(jaccard_index_rcpp_parallel(mat1, mat2));
    return rcpp_result_gen;
END_RCPP
}
// make_state_matrix_rcpp
NumericMatrix make_state_matrix_rcpp(DataFrame data, IntegerVector id, IntegerVector ltc, NumericVector aos, int l, int fail_code, int cens_code);
RcppExport SEXP _MSCA_make_state_matrix_rcpp(SEXP dataSEXP, SEXP idSEXP, SEXP ltcSEXP, SEXP aosSEXP, SEXP lSEXP, SEXP fail_codeSEXP, SEXP cens_codeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type data(dataSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type id(idSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type ltc(ltcSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type aos(aosSEXP);
    Rcpp::traits::input_parameter< int >::type l(lSEXP);
    Rcpp::traits::input_parameter< int >::type fail_code(fail_codeSEXP);
    Rcpp::traits::input_parameter< int >::type cens_code(cens_codeSEXP);
    rcpp_result_gen = Rcpp::wrap(make_state_matrix_rcpp(data, id, ltc, aos, l, fail_code, cens_code));
    return rcpp_result_gen;
END_RCPP
}
// jaccard_index_rcpp_upper
NumericMatrix jaccard_index_rcpp_upper(NumericMatrix mat);
RcppExport SEXP _MSCA_jaccard_index_rcpp_upper(SEXP matSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type mat(matSEXP);
    rcpp_result_gen = Rcpp::wrap(jaccard_index_rcpp_upper(mat));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MSCA_jaccard_index_rcpp_parallel", (DL_FUNC) &_MSCA_jaccard_index_rcpp_parallel, 2},
    {"_MSCA_make_state_matrix_rcpp", (DL_FUNC) &_MSCA_make_state_matrix_rcpp, 7},
    {"_MSCA_jaccard_index_rcpp_upper", (DL_FUNC) &_MSCA_jaccard_index_rcpp_upper, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_MSCA(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
