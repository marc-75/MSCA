source("~/Documents/PACKAGES/MSCA/R/get_cluster_sequences.R", echo = TRUE)
dt_seq <- get_cluster_sequences(
dt =  EHR_cl ,
cl_col = "cl",
id_col = "link_id",
event_col = "reg",
k = 2
)
source("~/Documents/PACKAGES/MSCA/R/get_cluster_sequences.R", echo = TRUE)
source("~/Documents/PACKAGES/MSCA/R/get_cluster_sequences.R", echo = TRUE)
dt_seq <- get_cluster_sequences(
dt =  EHR_cl ,
cl_col = "cl",
id_col = "link_id",
event_col = "reg",
k = 2
)
dt_seq
EHR_cl %>%
group_by(cl) %>% tally
EHR_cl %>%
distinct( link_id , .keep_all = T) %>%
group_by(cl) %>% tally
dt_seq
source("~/Documents/PACKAGES/MSCA/R/get_cluster_sequences.R", echo = TRUE)
get_cluster_sequences(
dt =  EHR_cl ,
cl_col = "cl",
id_col = "link_id",
event_col = "reg",
k = 2
)
seq_data <- get_cluster_sequences(
dt =  EHR_cl ,
cl_col = "cl",
id_col = "link_id",
event_col = "reg",
k = 2
)
seq_data
seq_list <- seq_data$sequences
seq_data$sequences
seq_data$dt_aos
seq_list
cl_values
setDT(dt)
setdiff( 1:3 , 3 )
source("~/Documents/PACKAGES/MSCA/R/get_cluster_sequences.R", echo = TRUE)
source("~/Documents/PACKAGES/MSCA/R/get_cluster_sequences.R", echo = TRUE)
seq_data <- get_cluster_sequences(
dt =  EHR_cl ,
cl_col = "cl",
id_col = "link_id",
event_col = "reg",
k = 2
)
seq_data
seq_data <- get_cluster_sequences(
dt =  EHR_cl ,
cens = 'cens',
cl_col = "cl",
id_col = "link_id",
event_col = "reg",
k = 2
)
seq_data
EHR_cl
source("~/Documents/PACKAGES/MSCA/R/get_cluster_sequences.R", echo = TRUE)
seq_data <- get_cluster_sequences(
dt =  EHR_cl ,
cens = 'cens',
cl_col = "cl",
id_col = "link_id",
event_col = "reg",
k = 2
)
seq_data
seq_data$dt_aos
seq_list
seq_along(seq_list)
seq_list
seq_data$dt_aos
seq_data$sequences
ns <- names(seq_list)
ns
ns <- names(seq_list)
ns
ns2 <- ns[i]
i<1
i<-1
ns2 <- ns[i]
ns2
dt_aos <- seq_data$dt_aos
dt_aos
source("~/Documents/PACKAGES/MSCA/R/get_cluster_sequences.R", echo = TRUE)
seq_data <- get_cluster_sequences(
dt =  EHR_cl ,
cens = 'cens',
cl_col = "cl",
id_col = "link_id",
event_col = "reg",
k = 2
)
seq_data
call_info <- attr(seq_data, "call")
call_info
cl_val <- eval(call_info[["cl_col"]])
cl_val
df <- seq_list[[i]]
ns2 <- ns[i]
dt_aos2 <- dt_aos %>%
filter(.data[[cl_col]] == ns2)
cl_col <- eval(call_info[["cl_col"]])
dt_aos2 <- dt_aos %>%
filter(.data[[cl_col]] == ns2)
dt_aos2
seq_data
nbc <- seq_data$n_by_cluster
nbc2 <- nbc[i]
#total <- sum(tab$seq_count)
tab <- tab %>%
mutate(seq_freq = seq_count / nbc2 )
#total <- sum(tab$seq_count)
tab <- tab %>%
mutate(seq_freq = seq_count / nbc2 )
k <- ncol(df)
colnames(df) <- paste0("V", seq_len(k))
tab <- df %>%
count(across(everything()), name = "seq_count")
#total <- sum(tab$seq_count)
tab <- tab %>%
mutate(seq_freq = seq_count / nbc2 )
tab
dt_aos
dt_aos2
dt_aos2
tab
tab <- tab %>%
rename(from = V1, to = V2) %>%
group_by(from) %>%
mutate(from_count = sum(seq_count),
conditional_prob = seq_count / from_count) %>%
ungroup()
marginal <- tab %>%
group_by(to) %>%
summarise(to_prob = sum(seq_count) / total, .groups = "drop")
tab <- tab %>%
rename(from = V1, to = V2) %>%
group_by(from) %>%
mutate(from_count = sum(seq_count),
conditional_prob = seq_count / from_count) %>%
ungroup()
#total <- sum(tab$seq_count)
tab <- tab %>%
mutate(seq_freq = seq_count / nbc2 )
tab <- tab %>%
rename(from = V1, to = V2) %>%
group_by(from) %>%
mutate(from_count = sum(seq_count),
conditional_prob = seq_count / from_count) %>%
ungroup()
tab <- df %>%
count(across(everything()), name = "seq_count")
#total <- sum(tab$seq_count)
tab <- tab %>%
mutate(seq_freq = seq_count / nbc2 )
tab <- tab %>%
rename(from = V1, to = V2) %>%
group_by(from) %>%
mutate(from_count = sum(seq_count),
conditional_prob = seq_count / from_count) %>%
ungroup()
marginal <- tab %>%
group_by(to) %>%
summarise(to_prob = sum(seq_count) / total, .groups = "drop")
total <- sum(tab$seq_count)
tab <- df %>%
count(across(everything()), name = "seq_count")
total <- sum(tab$seq_count)
tab <- tab %>%
mutate(seq_freq = seq_count / nbc2 )
tab <- tab %>%
rename(from = V1, to = V2) %>%
group_by(from) %>%
mutate(from_count = sum(seq_count),
conditional_prob = seq_count / from_count) %>%
ungroup()
marginal <- tab %>%
group_by(to) %>%
summarise(to_prob = sum(seq_count) / total, .groups = "drop")
tab <- tab %>%
left_join(marginal, by = "to") %>%
mutate(relative_risk = conditional_prob / to_prob) %>%
select(from, to, seq_count, seq_freq, conditional_prob, relative_risk) %>%
filter(seq_freq >= min_seq_freq,
conditional_prob >= min_conditional_prob,
relative_risk >= min_relative_risk)
min_seq_freq = 0.01
min_conditional_prob = 0,
min_conditional_prob = 0
min_relative_risk = 0
forward = TRUE)
forward = TRUE
tab <- df %>%
count(across(everything()), name = "seq_count")
total <- sum(tab$seq_count)
tab <- tab %>%
mutate(seq_freq = seq_count / nbc2 )
tab <- tab %>%
rename(from = V1, to = V2) %>%
group_by(from) %>%
mutate(from_count = sum(seq_count),
conditional_prob = seq_count / from_count) %>%
ungroup()
marginal <- tab %>%
group_by(to) %>%
summarise(to_prob = sum(seq_count) / total, .groups = "drop")
tab <- tab %>%
left_join(marginal, by = "to") %>%
mutate(relative_risk = conditional_prob / to_prob) %>%
select(from, to, seq_count, seq_freq, conditional_prob, relative_risk) %>%
filter(seq_freq >= min_seq_freq,
conditional_prob >= min_conditional_prob,
relative_risk >= min_relative_risk)
tab
reg_col <- eval(call_info[["reg_col"]])
reg_col
reg_col <- eval(call_info[["event_col"]])
reg_col
reg_col
tab2 <- tab %>%
left_join( dt_aos2 , by = c( 'from' = reg_col )) %>%
left_join( dt_aos2 , by = c( 'to' = reg_col ) ) %>%
filter( med.x < med.y )
tab2
tab2 <- tab %>%
left_join( dt_aos2 , by = c( 'from' = reg_col )) %>%
left_join( dt_aos2 , by = c( 'to' = reg_col ) , suffix = c('from','to')  ) %>%
filter( med.x < med.y )
tab2 <- tab %>%
left_join( dt_aos2 , by = c( 'from' = reg_col )) %>%
left_join( dt_aos2 , by = c( 'to' = reg_col ) , suffix = c('from','to')  ) %>%
filter( med.from < med.to )
tab2 <- tab %>%
left_join( dt_aos2 , by = c( 'from' = reg_col )) %>%
left_join( dt_aos2 , by = c( 'to' = reg_col ) , suffix = c('from','to')  ) %>%
filter( med.from < med.to )
tab2 <- tab %>%
left_join( dt_aos2 , by = c( 'from' = reg_col )) %>%
left_join( dt_aos2 , by = c( 'to' = reg_col ) , suffix = c('.from','.to')  ) %>%
filter( med.from < med.to )
tab2
dt_aos2 <- dt_aos %>%
filter(.data[[cl_col]] == ns2) %>% select(-.data[[ c(cl_col, n) ]] )
dt_aos2 <- dt_aos %>%
filter(.data[[cl_col]] == ns2) %>% select(-.data[[ c(cl_col, n) ]] )
dt_aos2 <- dt_aos %>%
filter(.data[[cl_col]] == ns2) %>% select(-.data[[ c('cl_col', 'n') ]] )
dt_aos2 <- dt_aos %>%
filter(.data[[cl_col]] == ns2) %>% select(-.data[[ n ]] )
dt_aos2 <- dt_aos %>%
filter(.data[[cl_col]] == ns2) %>% select( - .data[[n]] )
dt_aos2 <- dt_aos %>%
filter(.data[[cl_col]] == ns2) %>% select( - n )
dt_aos2 <- dt_aos %>%
filter(.data[[cl_col]] == ns2) %>% select( - c(n , cl ))
nbc2 <- nbc[i]
if (is.null(df) || !is.data.frame(df) || nrow(df) == 0) return(NULL)
k <- ncol(df)
colnames(df) <- paste0("V", seq_len(k))
tab <- df %>%
count(across(everything()), name = "seq_count")
total <- sum(tab$seq_count)
tab <- tab %>%
mutate(seq_freq = seq_count / nbc2 )
tab <- tab %>%
rename(from = V1, to = V2) %>%
group_by(from) %>%
mutate(from_count = sum(seq_count),
conditional_prob = seq_count / from_count) %>%
ungroup()
marginal <- tab %>%
group_by(to) %>%
summarise(to_prob = sum(seq_count) / total, .groups = "drop")
tab <- tab %>%
left_join(marginal, by = "to") %>%
mutate(relative_risk = conditional_prob / to_prob) %>%
select(from, to, seq_count, seq_freq, conditional_prob, relative_risk) %>%
filter(seq_freq >= min_seq_freq,
conditional_prob >= min_conditional_prob,
relative_risk >= min_relative_risk)
tab2 <- tab %>%
left_join( dt_aos2 , by = c( 'from' = reg_col )) %>%
left_join( dt_aos2 , by = c( 'to' = reg_col ) , suffix = c('.from','.to')  ) %>%
filter( med.from < med.to )
tab2
source("~/Documents/PACKAGES/MSCA/R/seq_stats.R", echo = TRUE)
sequence_stats(
seq_list = dt_seq ,
min_seq_freq = 0.03,
min_conditional_prob = 0,
min_relative_risk = 0
)
sequence_stats(
seq_data = dt_seq ,
min_seq_freq = 0.03,
min_conditional_prob = 0,
min_relative_risk = 0
)
source("~/Documents/PACKAGES/MSCA/R/seq_stats.R", echo = TRUE)
sequence_stats(
seq_data = dt_seq ,
min_seq_freq = 0.03,
min_conditional_prob = 0,
min_relative_risk = 0
)
source("~/Documents/PACKAGES/MSCA/R/seq_stats.R", echo = TRUE)
sequence_stats(
seq_data = dt_seq ,
min_seq_freq = 0.03,
min_conditional_prob = 0,
min_relative_risk = 0
)
cl_col
source("~/Documents/PACKAGES/MSCA/R/seq_stats.R", echo = TRUE)
sequence_stats(
seq_data = dt_seq ,
min_seq_freq = 0.03,
min_conditional_prob = 0,
min_relative_risk = 0
)
dt_aos2 <- dt_aos %>%
filter( cl_col == ns2)
source("~/Documents/PACKAGES/MSCA/R/seq_stats.R", echo = TRUE)
sequence_stats(
seq_data = dt_seq ,
min_seq_freq = 0.03,
min_conditional_prob = 0,
min_relative_risk = 0
)
source("~/Documents/PACKAGES/MSCA/R/seq_stats.R", echo = TRUE)
sequence_stats(
seq_data = dt_seq ,
min_seq_freq = 0.03,
min_conditional_prob = 0,
min_relative_risk = 0
)
seq_data
seq_data$dt_aos
dt_aos
source("~/Documents/PACKAGES/MSCA/R/seq_stats.R", echo = TRUE)
sequence_stats(
seq_data = dt_seq ,
min_seq_freq = 0.03,
min_conditional_prob = 0,
min_relative_risk = 0
)
source("~/Documents/PACKAGES/MSCA/R/seq_stats.R", echo = TRUE)
sequence_stats(
seq_data = dt_seq ,
min_seq_freq = 0.03,
min_conditional_prob = 0,
min_relative_risk = 0
)
source("~/Documents/PACKAGES/MSCA/R/seq_stats.R", echo = TRUE)
sequence_stats(
seq_data = dt_seq ,
min_seq_freq = 0.03,
min_conditional_prob = 0,
min_relative_risk = 0
)
dt_aos
cl_col
ns2
dt_aos2 <- dt_aos %>%
filter(.data[[cl_col]] == ns2)  # <- THIS is correct
dt_aos2 <- dt_aos %>%
filter(.data[[cl_col]] == !!get(ns2))  # <- THIS is correct
source("~/Documents/PACKAGES/MSCA/R/seq_stats.R", echo = TRUE)
sequence_stats(
seq_data = dt_seq ,
min_seq_freq = 0.03,
min_conditional_prob = 0,
min_relative_risk = 0
)
dt_aos2 <- dt_aos %>%
filter(.data[[cl_col]] == get(ns2))  # <- THIS is correct
source("~/Documents/PACKAGES/MSCA/R/seq_stats.R", echo = TRUE)
sequence_stats(
seq_data = dt_seq ,
min_seq_freq = 0.03,
min_conditional_prob = 0,
min_relative_risk = 0
)
source("~/Documents/PACKAGES/MSCA/R/seq_stats.R", echo = TRUE)
seq_data <- get_cluster_sequences(
dt =  EHR_cl ,
cens = 'cens',
cl_col = "cl",
id_col = "link_id",
event_col = "reg",
k = 2
)
sequence_stats(
seq_data = dt_seq ,
min_seq_freq = 0.03,
min_conditional_prob = 0,
min_relative_risk = 0
)
sequence_stats(
seq_data = seq_data ,
min_seq_freq = 0.03,
min_conditional_prob = 0,
min_relative_risk = 0
)
source("~/Documents/PACKAGES/MSCA/R/seq_stats.R", echo = TRUE)
sequence_stats(
seq_data = seq_data ,
min_seq_freq = 0.03,
min_conditional_prob = 0,
min_relative_risk = 0
)
source("~/Documents/PACKAGES/MSCA/R/seq_stats.R", echo = TRUE)
sequence_stats(
seq_data = seq_data ,
min_seq_freq = 0.03,
min_conditional_prob = 0,
min_relative_risk = 0
)
source("~/Documents/PACKAGES/MSCA/R/seq_stats.R", echo = TRUE)
sequence_stats(
seq_data = seq_data ,
min_seq_freq = 0.03,
min_conditional_prob = 0,
min_relative_risk = 0
)
source("~/Documents/PACKAGES/MSCA/R/seq_stats.R", echo = TRUE)
sequence_stats(
seq_data = seq_data ,
min_seq_freq = 0.03,
min_conditional_prob = 0,
min_relative_risk = 0
)
source("~/Documents/PACKAGES/MSCA/R/seq_stats.R", echo = TRUE)
sequence_stats(
seq_data = seq_data ,
min_seq_freq = 0.03,
min_conditional_prob = 0,
min_relative_risk = 0
)
source("~/Documents/PACKAGES/MSCA/R/seq_stats.R", echo = TRUE)
sequence_stats(
seq_data = seq_data ,
min_seq_freq = 0.03,
min_conditional_prob = 0,
min_relative_risk = 0
)
dt_aos2 <- dt_aos %>%
filter(.data[[cl_col]] == ns2  ) %>% select( -all_of( c(n , cl_col) ) )   # <- THIS is correct
source("~/Documents/PACKAGES/MSCA/R/seq_stats.R", echo = TRUE)
sequence_stats(
seq_data = seq_data ,
min_seq_freq = 0.03,
min_conditional_prob = 0,
min_relative_risk = 0
)
library(MSCA)
library(dplyr)
data(EHR)
head(EHR)
EHR %>%
nrow()
# Get a data frame with patient id and cluster assignation
df1 <- data.frame( link_id = names(ct_mat_8) , cl = paste0('cl_',ct_mat_8))
head(df1)
# Merge with primary data
EHR_cl <- EHR %>%
left_join( df1 )
# Get cluster sequences by cluster
dt_seq <- get_cluster_sequences(
dt =  EHR_cl ,
cl_col = "cl",
id_col = "link_id",
event_col = "reg",
k = 2
)
# Get basic stats by cluster
sequence_stats(
seq_data = dt_seq ,
min_seq_freq = 0.03,
min_conditional_prob = 0,
min_relative_risk = 0
)
#devtools::install()
devtools::build()
devtools::install(build_vignettes = T)
#devtools::install()
devtools::build()
detach("package:MSCA", unload = TRUE)
usethis::use_data(EHR)
# 3
Rcpp::compileAttributes()
devtools::clean_dll()
devtools::document()
devtools::load_all()
#devtools::check(cran = TRUE)
#devtools::install()
devtools::build()
detach("package:MSCA", unload = TRUE)
devtools::document()
devtools::document()
devtools::document()
